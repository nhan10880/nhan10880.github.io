/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package display;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;

import java.sql.SQLException;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

import whowantstobeamillionaire_game.Question;
import whowantstobeamillionaire_game.QuestionModel;
import whowantstobeamillionaire_game.Paint;

import whowantstobeamillionaire_game.UserModel;

/**
 *
 * @author nhanDT
 */
public class MillionaireGame extends javax.swing.JFrame {

    QuestionModel qm = new QuestionModel();
    UserModel us = new UserModel();
    int level = 1;
    String Answar = "", userNames;
    Random rd = new Random();
    Image appLogo = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img2/Logo.png"));
    Timer tm, tm2;
    private int y1, y2, y3, y4, r;
    private double rm1, rm2, rm3, rm4, s;
    String[] money = {"0", "100", "200", "300", "500", "1000",
        "2000", "4000", "8000", "16000", "32000", "64000", "125000",
        "250000", "500000", "1000000"};
    private boolean help5050 = true, helpCall = true, helpAudience = true;

    /**
     * Creates new form MainGame
     */
    public MillionaireGame(String userName) throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        dalGameOver.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);//close X
        dalPause.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        pnlBR.setOpaque(false);
        pnlQuestion.setBackground(new Color(0, 0, 0, 0));//set transparent color
        Answar = PlayGame(level);
        pnlQuestion1.setBackground(new Color(0, 0, 0, 0));
        dalCall.setLocationRelativeTo(null);
        dalCall.setSize(410, 300);
        setIconImage(appLogo);//set logo
        dalCall.setIconImage(appLogo);
        dalGameOver.setIconImage(appLogo);
        dalPause.setIconImage(appLogo);
        userNames = userName;
        lblUserName.setText(userName);//set text user
        dalPause.setSize(420, 270);
        dalPause.setLocationRelativeTo(null);//set center
        dalPause.setBackground(Color.BLUE);
        lblShowMoney.setText(money[level] + "$");
        pnlMoney.setBackground(new Color(0, 0, 0, 0));
        dalGameOver.setLocationRelativeTo(null);
        this.setResizable(false);
        lblOKTrueQuestion.setText("");
        lblOKTrueQuestion.setBorder(null);
    }

    /**
     * random number 1-5
     *
     * @return
     */
    public int RandomNumber() {

        int number = rd.nextInt(5) + 1;
        return number;
    }

    /**
     * set Text question and answer
     *
     * @param level
     * @return
     * @throws SQLException
     */
    public String PlayGame(int level) throws SQLException {

        Question qt;

        qt = qm.getQuestion(level, RandomNumber());
        lblQuestion.setText(qt.getQ_Question());
        lblShowQuestion.setText("Question " + level);
        lblAQuestion.setText("A. " + qt.getA_Question());
        lblBQuestion.setText("B. " + qt.getB_Question());
        lblCQuestion.setText("C. " + qt.getC_Question());
        lblDQuestion.setText("D. " + qt.getD_Question());
        setDATrue();
        lblShowMoney.setText(money[level] + "$");
        System.out.println("sss" + qt.getAnswer_question());
        return qt.getAnswer_question();
    }

    /**
     * set icon Background question
     */
    public void setDATrue() {
        lblBRAQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDA.png")));
        lblBRBQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDA.png")));
        lblBRCQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDA.png")));
        lblBRDQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDA.png")));
    }

    /**
     * delay class Show answers for help with calling relatives
     */
    class delay extends TimerTask {

        @Override
        public void run() {

            lblCallAnswar.setText("Answer: " + ranndomAnswar());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dalCall = new javax.swing.JDialog();
        lblImgCall = new javax.swing.JLabel();
        lblCallAnswar = new javax.swing.JLabel();
        lblImgBR = new javax.swing.JLabel();
        dalPause = new javax.swing.JDialog();
        lblPauses = new javax.swing.JLabel();
        lblCOntinue = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        lblStopGame = new javax.swing.JLabel();
        lblBRPause = new javax.swing.JLabel();
        dalGameOver = new javax.swing.JDialog();
        lblGameOver = new javax.swing.JLabel();
        lblPlayAgain = new javax.swing.JLabel();
        lblExitG = new javax.swing.JLabel();
        lblMoneyGO = new javax.swing.JLabel();
        lblBRGameOver = new javax.swing.JLabel();
        pnlBR = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        pnlQuestion = new javax.swing.JPanel();
        lblQuestion = new javax.swing.JLabel();
        lblBRQuestion = new javax.swing.JLabel();
        lblAQuestion = new javax.swing.JLabel();
        lblDQuestion = new javax.swing.JLabel();
        lblCQuestion = new javax.swing.JLabel();
        lblBQuestion = new javax.swing.JLabel();
        lblBRAQuestion = new javax.swing.JLabel();
        lblBRBQuestion = new javax.swing.JLabel();
        lblBRCQuestion = new javax.swing.JLabel();
        lblBRDQuestion = new javax.swing.JLabel();
        lblTrueQuestion = new javax.swing.JLabel();
        lblOKTrueQuestion = new javax.swing.JLabel();
        lblBRPanel = new javax.swing.JLabel();
        lbl5050 = new javax.swing.JLabel();
        lblAudience = new javax.swing.JLabel();
        lblPause = new javax.swing.JLabel();
        pnlQuestion1 = new javax.swing.JPanel();
        lblShowQuestion = new javax.swing.JLabel();
        lblQuestion1 = new javax.swing.JLabel();
        lblCallRelatives = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        pnlMoney = new javax.swing.JPanel();
        lblShowMoney = new javax.swing.JLabel();
        lblMoney = new javax.swing.JLabel();
        lblBR = new javax.swing.JLabel();

        dalCall.setTitle("Call relatives");
        dalCall.setMinimumSize(new java.awt.Dimension(400, 300));
        dalCall.getContentPane().setLayout(null);

        lblImgCall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/Hinh0.png"))); // NOI18N
        dalCall.getContentPane().add(lblImgCall);
        lblImgCall.setBounds(20, 30, 150, 210);

        lblCallAnswar.setForeground(new java.awt.Color(255, 255, 255));
        lblCallAnswar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCallAnswar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        dalCall.getContentPane().add(lblCallAnswar);
        lblCallAnswar.setBounds(200, 70, 180, 130);

        lblImgBR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nenGameAilatrieuphuAboutHelp.jpg"))); // NOI18N
        dalCall.getContentPane().add(lblImgBR);
        lblImgBR.setBounds(0, 0, 410, 300);

        dalPause.setTitle("Pause");
        dalPause.getContentPane().setLayout(null);

        lblPauses.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblPauses.setForeground(new java.awt.Color(255, 255, 255));
        lblPauses.setText("Pause");
        dalPause.getContentPane().add(lblPauses);
        lblPauses.setBounds(139, 24, 109, 44);

        lblCOntinue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCOntinue.setForeground(new java.awt.Color(255, 255, 255));
        lblCOntinue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCOntinue.setText("Continue");
        lblCOntinue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblCOntinue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCOntinueMouseClicked(evt);
            }
        });
        dalPause.getContentPane().add(lblCOntinue);
        lblCOntinue.setBounds(25, 142, 80, 34);

        lblExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblExit.setForeground(new java.awt.Color(255, 255, 255));
        lblExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExit.setText("Exit");
        lblExit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
        });
        dalPause.getContentPane().add(lblExit);
        lblExit.setBounds(295, 142, 80, 34);

        lblStopGame.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStopGame.setForeground(new java.awt.Color(255, 255, 255));
        lblStopGame.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStopGame.setText("Stop the game");
        lblStopGame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblStopGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblStopGameMouseClicked(evt);
            }
        });
        dalPause.getContentPane().add(lblStopGame);
        lblStopGame.setBounds(149, 142, 108, 34);

        lblBRPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nenGameAilatrieuphuAboutHelp.jpg"))); // NOI18N
        lblBRPause.setText("jLabel2");
        dalPause.getContentPane().add(lblBRPause);
        lblBRPause.setBounds(0, 0, 400, 250);

        dalGameOver.setTitle("Game Over");
        dalGameOver.setSize(new java.awt.Dimension(470, 300));
        dalGameOver.getContentPane().setLayout(null);

        lblGameOver.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblGameOver.setForeground(new java.awt.Color(102, 102, 255));
        lblGameOver.setText("Game Over");
        dalGameOver.getContentPane().add(lblGameOver);
        lblGameOver.setBounds(130, 30, 201, 44);

        lblPlayAgain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPlayAgain.setForeground(new java.awt.Color(255, 255, 255));
        lblPlayAgain.setText("Play Again");
        lblPlayAgain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblPlayAgain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPlayAgainMouseClicked(evt);
            }
        });
        dalGameOver.getContentPane().add(lblPlayAgain);
        lblPlayAgain.setBounds(64, 177, 100, 30);

        lblExitG.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblExitG.setForeground(new java.awt.Color(255, 255, 255));
        lblExitG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExitG.setText("Exit");
        lblExitG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblExitG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitGMouseClicked(evt);
            }
        });
        dalGameOver.getContentPane().add(lblExitG);
        lblExitG.setBounds(286, 177, 100, 30);

        lblMoneyGO.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMoneyGO.setForeground(new java.awt.Color(255, 255, 255));
        lblMoneyGO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMoneyGO.setText("Money");
        dalGameOver.getContentPane().add(lblMoneyGO);
        lblMoneyGO.setBounds(170, 100, 110, 30);

        lblBRGameOver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nenGameAilatrieuphuAboutHelp.jpg"))); // NOI18N
        dalGameOver.getContentPane().add(lblBRGameOver);
        lblBRGameOver.setBounds(0, 0, 470, 300);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Millionaire Game");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logoAilatrieuphu.png"))); // NOI18N

        pnlQuestion.setLayout(null);

        lblQuestion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQuestion.setText("Question");
        pnlQuestion.add(lblQuestion);
        lblQuestion.setBounds(80, 10, 700, 90);

        lblBRQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khung.png"))); // NOI18N
        pnlQuestion.add(lblBRQuestion);
        lblBRQuestion.setBounds(30, 10, 800, 90);

        lblAQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblAQuestion.setText("A Question");
        lblAQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAQuestionMouseClicked(evt);
            }
        });
        pnlQuestion.add(lblAQuestion);
        lblAQuestion.setBounds(80, 130, 290, 60);

        lblDQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblDQuestion.setText("D question");
        lblDQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDQuestionMouseClicked(evt);
            }
        });
        pnlQuestion.add(lblDQuestion);
        lblDQuestion.setBounds(500, 220, 290, 60);

        lblCQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblCQuestion.setText("C Question");
        lblCQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCQuestionMouseClicked(evt);
            }
        });
        pnlQuestion.add(lblCQuestion);
        lblCQuestion.setBounds(80, 220, 290, 60);

        lblBQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblBQuestion.setText("B Question");
        lblBQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBQuestionMouseClicked(evt);
            }
        });
        pnlQuestion.add(lblBQuestion);
        lblBQuestion.setBounds(500, 130, 290, 60);

        lblBRAQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khungDA.png"))); // NOI18N
        pnlQuestion.add(lblBRAQuestion);
        lblBRAQuestion.setBounds(30, 120, 370, 80);

        lblBRBQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khungDA.png"))); // NOI18N
        pnlQuestion.add(lblBRBQuestion);
        lblBRBQuestion.setBounds(450, 120, 370, 80);

        lblBRCQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khungDA.png"))); // NOI18N
        pnlQuestion.add(lblBRCQuestion);
        lblBRCQuestion.setBounds(30, 210, 370, 80);

        lblBRDQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/khungDA.png"))); // NOI18N
        pnlQuestion.add(lblBRDQuestion);
        lblBRDQuestion.setBounds(450, 210, 370, 80);

        lblTrueQuestion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTrueQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblTrueQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlQuestion.add(lblTrueQuestion);
        lblTrueQuestion.setBounds(170, 310, 510, 40);

        lblOKTrueQuestion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblOKTrueQuestion.setForeground(new java.awt.Color(255, 255, 255));
        lblOKTrueQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOKTrueQuestion.setText("OK");
        lblOKTrueQuestion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblOKTrueQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOKTrueQuestionMouseClicked(evt);
            }
        });
        pnlQuestion.add(lblOKTrueQuestion);
        lblOKTrueQuestion.setBounds(690, 310, 80, 40);

        lblBRPanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/nenPanel.png"))); // NOI18N
        pnlQuestion.add(lblBRPanel);
        lblBRPanel.setBounds(0, 0, 860, 370);

        lbl5050.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/5050.png"))); // NOI18N
        lbl5050.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl5050MouseClicked(evt);
            }
        });

        lblAudience.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/hoiKhanGia.png"))); // NOI18N
        lblAudience.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAudienceMouseClicked(evt);
            }
        });

        lblPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/dung.png"))); // NOI18N
        lblPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPauseMouseClicked(evt);
            }
        });

        pnlQuestion1.setLayout(null);

        lblShowQuestion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblShowQuestion.setForeground(new java.awt.Color(204, 0, 0));
        lblShowQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowQuestion.setText("Question");
        pnlQuestion1.add(lblShowQuestion);
        lblShowQuestion.setBounds(10, 20, 140, 30);

        lblQuestion1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/BRQuestion.png"))); // NOI18N
        pnlQuestion1.add(lblQuestion1);
        lblQuestion1.setBounds(0, 0, 157, 70);

        lblCallRelatives.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img2/Goidien.png"))); // NOI18N
        lblCallRelatives.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCallRelativesMouseClicked(evt);
            }
        });

        lblUserName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 255, 255));
        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName.setText("name");

        pnlMoney.setLayout(null);

        lblShowMoney.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblShowMoney.setForeground(new java.awt.Color(204, 0, 0));
        lblShowMoney.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowMoney.setText("00$");
        pnlMoney.add(lblShowMoney);
        lblShowMoney.setBounds(10, 20, 140, 30);

        lblMoney.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/BRQuestion.png"))); // NOI18N
        pnlMoney.add(lblMoney);
        lblMoney.setBounds(0, 0, 160, 70);

        javax.swing.GroupLayout pnlBRLayout = new javax.swing.GroupLayout(pnlBR);
        pnlBR.setLayout(pnlBRLayout);
        pnlBRLayout.setHorizontalGroup(
            pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBRLayout.createSequentialGroup()
                .addGroup(pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBRLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lbl5050)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(lblAudience)
                        .addGap(18, 18, 18)
                        .addComponent(lblCallRelatives)
                        .addGap(187, 187, 187))
                    .addGroup(pnlBRLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(pnlQuestion1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblLogo)
                .addGroup(pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBRLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(lblPause))
                    .addGroup(pnlBRLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(pnlMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBRLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBRLayout.setVerticalGroup(
            pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlBRLayout.createSequentialGroup()
                        .addGroup(pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblAudience, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbl5050, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPause, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblCallRelatives))
                        .addGap(91, 91, 91)
                        .addComponent(pnlQuestion1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLogo)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBRLayout.createSequentialGroup()
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(pnlBR, gridBagConstraints);

        lblBR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nenGameAilatrieuphu.jpg"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(lblBR, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * click answer A if true show background green show money level ++ else
     * show background red show dialog
     *
     * @param evt
     */
    private void lblAQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAQuestionMouseClicked
        if (Answar.equals("A")) {

            try {
                lblBRAQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAdung.png")));
                level++;
                if (level == 16) {
                    lblGameOver.setText("You Win");
                    us.insertName(userNames, Integer.parseInt(money[level - 1]));
                    lblMoneyGO.setText(money[level - 1] + "$");
                    dalGameOver.setModal(true);
                    dalGameOver.setVisible(true);
                } else {
                    lblTrueQuestion.setText("Congratulations, you've got " + money[level - 1] + "$");
                    lblOKTrueQuestion.setText("OK");
                    lblOKTrueQuestion.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                }

            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblBRAQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAsai.png")));
            try {
                if (level - 1 < 5) {
                    level = 1;
                } else if (level - 1 >= 5 && level - 1 < 10) {
                    level = 6;
                } else if (level - 1 >= 10) {
                    level = 11;
                }
                us.insertName(userNames, Integer.parseInt(money[level - 1]));
                lblMoneyGO.setText(money[level - 1] + "$");
                dalGameOver.setModal(true);
                dalGameOver.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_lblAQuestionMouseClicked
    /**
     * click answer B if true show background green show money level ++ else
     * show background red show dialog
     *
     * @param evt
     */
    private void lblBQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBQuestionMouseClicked
        if (Answar.equals("B")) {

            try {
                lblBRBQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAdung.png")));
                level++;
                if (level == 16) {
                    lblGameOver.setText("You Win");
                    us.insertName(userNames, Integer.parseInt(money[level - 1]));
                    lblMoneyGO.setText(money[level - 1] + "$");
                    dalGameOver.setModal(true);
                    dalGameOver.setVisible(true);
                } else {
                    lblTrueQuestion.setText("Congratulations, you've got " + money[level - 1] + "$");
                    lblOKTrueQuestion.setText("OK");
                    lblOKTrueQuestion.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                }

            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblBRBQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAsai.png")));
            try {
                if (level - 1 < 5) {
                    level = 1;
                } else if (level - 1 >= 5 && level - 1 < 10) {
                    level = 6;
                } else if (level - 1 >= 10) {
                    level = 11;
                }
                us.insertName(userNames, Integer.parseInt(money[level - 1]));
                lblMoneyGO.setText(money[level - 1] + "$");
                dalGameOver.setModal(true);
                dalGameOver.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_lblBQuestionMouseClicked
    /**
     * click answer C if true show background green show money level ++ else
     * show background red show dialog
     *
     * @param evt
     */
    private void lblCQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCQuestionMouseClicked
        if (Answar.equals("C")) {

            try {
                lblBRCQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAdung.png")));
                level++;
                if (level == 16) {
                    lblGameOver.setText("You Win");
                    us.insertName(userNames, Integer.parseInt(money[level - 1]));
                    lblMoneyGO.setText(money[level - 1] + "$");
                    dalGameOver.setModal(true);
                    dalGameOver.setVisible(true);
                } else {
                    lblTrueQuestion.setText("Congratulations, you've got " + money[level - 1] + "$");
                    lblOKTrueQuestion.setText("OK");
                    lblOKTrueQuestion.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                }

            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblBRCQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAsai.png")));
            try {
                if (level - 1 < 5) {
                    level = 1;
                } else if (level - 1 >= 5 && level - 1 < 10) {
                    level = 6;
                } else if (level - 1 >= 10) {
                    level = 11;
                }
                us.insertName(userNames, Integer.parseInt(money[level - 1]));
                lblMoneyGO.setText(money[level - 1] + "$");
                dalGameOver.setModal(true);
                dalGameOver.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_lblCQuestionMouseClicked
    /**
     * click answer D if true show background green show money level ++ else
     * show background red show dialog
     *
     * @param evt
     */
    private void lblDQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDQuestionMouseClicked
        if (Answar.equals("D")) {

            try {
                lblBRDQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAdung.png")));
                level++;
                if (level == 16) {
                    lblGameOver.setText("You Win");
                    us.insertName(userNames, Integer.parseInt(money[level - 1]));
                    lblMoneyGO.setText(money[level - 1] + "$");
                    dalGameOver.setModal(true);
                    dalGameOver.setVisible(true);
                } else {
                    lblTrueQuestion.setText("Congratulations, you've got " + money[level - 1] + "$");
                    lblOKTrueQuestion.setText("OK");
                    lblOKTrueQuestion.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                }

            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lblBRDQuestion.setIcon(new ImageIcon(getClass().getResource("/img/khungDAsai.png")));
            try {
                if (level - 1 < 5) {
                    level = 1;
                } else if (level - 1 >= 5 && level - 1 < 10) {
                    level = 6;
                } else if (level - 1 >= 10) {
                    level = 11;
                }
                us.insertName(userNames, Integer.parseInt(money[level - 1]));
                lblMoneyGO.setText(money[level - 1] + "$");
                dalGameOver.setModal(true);
                dalGameOver.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_lblDQuestionMouseClicked
    /**
     * random 2 answer and set text =""
     */
    public void random5050a() {
        System.out.println(Answar);
        String rdn = ranndomAnswar();
        System.out.println("abc"+rdn);
        String rdn2 = ranndomAnswar();
        while (rdn == Answar) {
            rdn = ranndomAnswar();
        }
        if (rdn == "A") {
            lblAQuestion.setText("");
        } else if (rdn == "B") {
            lblBQuestion.setText("");
        } else if (rdn == "C") {
            lblCQuestion.setText("");
        } else if (rdn == "D") {
            lblDQuestion.setText("");
        }
        while (rdn2 == Answar && rdn2 == rdn) {
            rdn2 = ranndomAnswar();
        }
        if (rdn2 == "A") {
            lblAQuestion.setText("");
        } else if (rdn2 == "B") {
            lblBQuestion.setText("");
        } else if (rdn2 == "C") {
            lblCQuestion.setText("");
        } else if (rdn2 == "D") {
            lblDQuestion.setText("");
        }
    }

    /**
     * Use 1 time per round
     *
     * @param evt
     */
    private void lbl5050MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl5050MouseClicked
        if (help5050 == true) {
            random5050a();
            help5050 = false;
        }

    }//GEN-LAST:event_lbl5050MouseClicked
    /**
     * random 2 number
     *
     * @return
     */
    public int randomRelatives() {
        return rd.nextInt(2) + 1;
    }

    /**
     * random 4 answer A,B,C,D
     *
     * @return da
     */
    public String ranndomAnswar() {
        int num = rd.nextInt(4) + 1;
        String da;
        switch (num) {
            case 1:
                da = "A";
                break;
            case 2:
                da = "B";
                break;
            case 3:
                da = "C";
                break;
            case 4:
                da = "D";
                break;
            default:
                da = null;
        }
        return da;
    }

    /**
     * Use 1 time per round and call relatives help
     *
     * @param evt
     */
    private void lblCallRelativesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCallRelativesMouseClicked
        if (helpCall == true) {
            lblImgCall.setIcon(new ImageIcon(getClass().getResource("/img2/hinh" + randomRelatives() + ".png")));
            delay dl = new delay();
            tm = new Timer();
            tm.schedule(dl, 2000);
            dalCall.setModal(true);
            dalCall.setVisible(true);
            helpCall = false;
        }


    }//GEN-LAST:event_lblCallRelativesMouseClicked
    /**
     * paint
     */
    public void paint() {
        Random();
        Paint m = new Paint(y1, y2, y3, y4);
        m.setBackground(Color.BLUE);
        JFrame f = new JFrame();
        f.add(m);
        f.setIconImage(appLogo);
        f.setResizable(false);
        f.setSize(170, 210);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    /**
     * random 4 % answer and paint
     */
    public void Random() {
        Random rd = new Random();
        rm1 = rd.nextInt(101);
        rm2 = rd.nextInt(101);
        rm3 = rd.nextInt(101);
        rm4 = rd.nextInt(101);
        s = rm1 + rm2 + rm3 + rm4;
        rm1 = (rm1 / s) * 100;
        rm2 = (rm2 / s) * 100;
        rm3 = (rm3 / s) * 100;
        rm4 = (rm4 / s) * 100;
        y1 = (int) rm1;
        y2 = (int) rm2;
        y3 = (int) rm3;
        y4 = (int) rm4;
        s = y1 + y2 + y3 + y4;
        if (s < 100) {
            r = rd.nextInt(4) + 1;
            if (r == 1) {
                y1 += 100 - (int) s;
            } else if (r == 2) {
                y2 += 100 - (int) s;
            } else if (r == 3) {
                y3 += 100 - (int) s;
            } else if (r == 4) {
                y4 += 100 - (int) s;
            }
        }
    }

    /**
     * call audience help
     *
     * @param evt
     */
    private void lblAudienceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAudienceMouseClicked
        if (helpAudience) {
            paint();
            System.out.println(y1 + " " + y2 + " " + y3 + " " + y4);
            helpAudience = false;
        }


    }//GEN-LAST:event_lblAudienceMouseClicked
    /**
     * call dialog Pause
     *
     * @param evt
     */
    private void lblPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPauseMouseClicked
        dalPause.setModal(true);
        dalPause.setVisible(true);
    }//GEN-LAST:event_lblPauseMouseClicked
    /**
     * click continue
     *
     * @param evt
     */
    private void lblCOntinueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCOntinueMouseClicked
        dalPause.setVisible(false);
    }//GEN-LAST:event_lblCOntinueMouseClicked
    /**
     * Exit pause
     *
     * @param evt
     */
    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        try {
            new MillionaireMenu().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        dalPause.setVisible(false);
    }//GEN-LAST:event_lblExitMouseClicked
    /**
     * stop game and show dialog game over
     *
     * @param evt
     */
    private void lblStopGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblStopGameMouseClicked
        try {
            us.insertName(userNames, Integer.parseInt(money[level - 1]));
            lblMoneyGO.setText(money[level - 1]+"$");
            dalGameOver.setModal(true);
            dalGameOver.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblStopGameMouseClicked
    /**
     * play again
     *
     * @param evt
     */
    private void lblPlayAgainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPlayAgainMouseClicked
        level = 1;
        help5050 = true;
        helpAudience = true;
        helpCall = true;

        try {
            Answar = PlayGame(level);
            dalGameOver.setVisible(false);
            dalPause.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblPlayAgainMouseClicked
    /**
     * Exit game over
     *
     * @param evt
     */
    private void lblExitGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitGMouseClicked
        try {
            new MillionaireMenu().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        dalGameOver.setVisible(false);
        dalPause.setVisible(false);
    }//GEN-LAST:event_lblExitGMouseClicked
/**
 * 
 * @param evt 
 */
    private void lblOKTrueQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOKTrueQuestionMouseClicked
        try {
            Answar = PlayGame(level);
            lblOKTrueQuestion.setText("");
            lblOKTrueQuestion.setBorder(null);
            lblTrueQuestion.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(MillionaireGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblOKTrueQuestionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog dalCall;
    private javax.swing.JDialog dalGameOver;
    private javax.swing.JDialog dalPause;
    private javax.swing.JLabel lbl5050;
    private javax.swing.JLabel lblAQuestion;
    private javax.swing.JLabel lblAudience;
    private javax.swing.JLabel lblBQuestion;
    private javax.swing.JLabel lblBR;
    private javax.swing.JLabel lblBRAQuestion;
    private javax.swing.JLabel lblBRBQuestion;
    private javax.swing.JLabel lblBRCQuestion;
    private javax.swing.JLabel lblBRDQuestion;
    private javax.swing.JLabel lblBRGameOver;
    private javax.swing.JLabel lblBRPanel;
    private javax.swing.JLabel lblBRPause;
    private javax.swing.JLabel lblBRQuestion;
    private javax.swing.JLabel lblCOntinue;
    private javax.swing.JLabel lblCQuestion;
    private javax.swing.JLabel lblCallAnswar;
    private javax.swing.JLabel lblCallRelatives;
    private javax.swing.JLabel lblDQuestion;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblExitG;
    private javax.swing.JLabel lblGameOver;
    private javax.swing.JLabel lblImgBR;
    private javax.swing.JLabel lblImgCall;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMoney;
    private javax.swing.JLabel lblMoneyGO;
    private javax.swing.JLabel lblOKTrueQuestion;
    private javax.swing.JLabel lblPause;
    private javax.swing.JLabel lblPauses;
    private javax.swing.JLabel lblPlayAgain;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblQuestion1;
    private javax.swing.JLabel lblShowMoney;
    private javax.swing.JLabel lblShowQuestion;
    private javax.swing.JLabel lblStopGame;
    private javax.swing.JLabel lblTrueQuestion;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPanel pnlBR;
    private javax.swing.JPanel pnlMoney;
    private javax.swing.JPanel pnlQuestion;
    private javax.swing.JPanel pnlQuestion1;
    // End of variables declaration//GEN-END:variables
}
